#include <stdio.h>
#include <math.h>    /* for pow(x, y) */
#include "type.h"
#define n_dim 5
#define bits_per_dim 10

double decode(IPTR pj, int index, int size);
double binToDec(int *chrom, int l);

double eval(POPULATION *p, IPTR pj)
     /* Called from gen.c and init.c */
{
  double val;
  double square = 0.0;

    ifstream File;
  File.open("input.txt");

  while(!File.eof())
  {
    File >> vec[i];
    i++;
  }


  //val = decode(pj, 0, p->lchrom);

  //square = val * val;

  //return square;
}

double decode(IPTR pj, int index, int size)
{

  return ((double) binToDec(&(pj->chrom[0]), size));
}

double binToDec(int *chrom, int l)
{

  ofstream myfile_out;
  myfile_out.open ("decode_out.txt");

  for (i = 0 ; i < l; i++){

    myfile_out << str(chrom[i]) << endl;

  }

  myfile_out.close();
  return 0;


  int i;
  double prod;

  prod = 0.0;

  int x_i[n_dim]
  for ( i = 0; i < n_dim ; i++)
  {
    x_i[i] = (1023 << (i * n_bits_per_dim)) &  
//shift mask, bitwise 'and' with chromosome, separate out bits into array
//of bits
  }


  for(i = 0; i < l; i++){
    prod += (chrom[i] == 0 ? 0.0 : pow((double)2.0, (double) i));
  }
  return prod;
}

void decToBin(int ad, int *barray, int size)
{
  int i, t;

  t = ad;
  for(i = 0; i < size; i++){
    barray[i] = t%2;
    t = t/2;
  }
}
